mixin renderCardsCollection(cards)
  div.container
    div.row.no-gutters
      each card in cards
        div.col-md-3
          +renderCard(card)

mixin renderCard(card)
  div.card.text-centered
    div.card-content
      div.card-name
        a(href='/cards/' + card.idName)=card.name
        p.small.text.type= card.type
      div.image.card-image-container
        a(href='/cards/' + card.idName, title='Details')
          img(src='http://www.clashapi.xyz/images/cards/' + card.idName + '.png', style=(card.rarity == 'Legendary')).card-image.img-fluid
          p.small.text.rarity= card.rarity
      div.card-action
        div
          i.elixir.custom-icon
          span.custom-icon-label x #{card.elixirCost}

mixin renderCardWithDetail(card)
  div.card2
    div.row
      div.col-4
        img(src='http://www.clashapi.xyz/images/cards/' + card.idName + '.png', class='card-image-detail').img-fluid
      div.col-8
        h2.card-info-name= card.name
        div.container
          div.row
            div.col-md-6
              p.text-faded= `${card.type} - ${card.rarity}`
            div.col-md-6.offset-6
              P.right-align
                i.elixir.custom-icon
                span.custom-icon-label.text-faded x #{card.elixirCost}
        div.row
          div
            h5 Descrição:
            p= card.description

mixin renderTotalElixirCost
  - let i = 0
  each card in cards
    - i += parseInt(card.elixirCost)
  - i = (i / 8).toFixed(1);
  = i

mixin renderTotalCardType(cards, type)
  - let cardsOfType = 0
  each card in cards
    - if (card.type === type) {
      - cardsOfType++
    - }
  = cardsOfType

//- Chests

mixin renderChestArenas(chests)
  each chest in chests
    div= chest.arena
